SET datestyle = 'ISO';
SET client_min_messages = WARNING;
SET log_statement TO 'none';
CREATE EXTENSION parquet_s3_fdw;
DROP ROLE IF EXISTS regress_parquet_s3_fdw;
CREATE ROLE regress_parquet_s3_fdw LOGIN SUPERUSER;
CREATE SERVER parquet_s3_srv FOREIGN DATA WRAPPER parquet_s3_fdw;
CREATE USER MAPPING FOR regress_parquet_s3_fdw SERVER parquet_s3_srv;
SET ROLE regress_parquet_s3_fdw;

-- import foreign schema
IMPORT FOREIGN SCHEMA "@abs_srcdir@/data"
FROM SERVER parquet_s3_srv
INTO public
OPTIONS (sorted 'one');
\d
SELECT * FROM example2;

-- import_parquet
create function list_parquet_s3_files(args jsonb)
returns text[] as
$$
    select array[args->>'dir' || '/example1.parquet', args->>'dir' || '/example2.parquet']::text[];
$$
language sql;

select import_parquet_s3('example_import', 'public', 'parquet_s3_srv', 'list_parquet_s3_files', '{"dir": "@abs_srcdir@/data"}', '{"sorted": "one"}');
SELECT * FROM example_import ORDER BY one, three;
select import_parquet_s3_explicit('example_import2', 'public', 'parquet_s3_srv', array['one', 'three', 'six'], array['int8', 'text', 'bool']::regtype[], 'list_parquet_s3_files', '{"dir": "@abs_srcdir@/data"}', '{"sorted": "one"}');
SELECT * FROM example_import2;

DROP FUNCTION list_parquet_s3_files;
DROP EXTENSION parquet_s3_fdw CASCADE;
